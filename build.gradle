apply plugin: 'scala'
apply plugin: 'java'
apply plugin: 'idea'

import groovy.io.FileType
import java.util.regex.Pattern

defaultTasks 'build'
//defaultTasks 'compileScala'

repositories {
  mavenCentral()
  mavenLocal()
  maven {
    url "http://repo.bukkit.org/content/repositories/snapshots/"
  }
  maven {
    url "http://maven.clapper.org/"
  }
  maven {
    url "http://dl.bintray.com/joshcough/maven/"
  }
}

ext.version = "0.2"

ext.mclibVersion = "0.4"
ext.home = System.properties['user.home']
ext.mavenLocal = "${ext.home}/.m2/repository"
ext.ivyLocal = "${ext.home}/.ivy2/local"
ext.ivyCache = "${ext.home}/.ivy2/cache"
ext.gradleCache = "${ext.home}/.gradle/caches/artifacts-26/filestore"

dependencies {
  runtime "org.scala-lang:scala-library:2.10.2"
  compile "org.scala-lang:scala-compiler:2.10.2"
  // When calling anything directly on the Bukkit object, the Servlet API
  // is (often) required to avoid weird compilation errors related to a
  // stub version included in the Bukket jar.
  compile "javax.servlet:servlet-api:2.5"
  compile "org.bukkit:bukkit:1.6.4-R0.1-SNAPSHOT"
  compile "org.bukkit:craftbukkit:1.6.4-R0.1-SNAPSHOT"
  compile "org.clapper.minecraft:mclib:${ext.mclibVersion}"
  compile "com.joshcough:scala-minecraft-plugin-api_2.10:0.3.2"

  runtime("com.joshcough:scala-minecraft-plugin-api_2.10:0.3.2") {
    transitive = false
  }
  runtime("org.clapper.minecraft:mclib:${ext.mclibVersion}") {
    transitive = false
  }
}

// --------------------------------------------------------------------------
// Tasks
// --------------------------------------------------------------------------

tasks.withType(ScalaCompile) {
  scalaCompileOptions.useAnt = false
  scalaCompileOptions.additionalParameters = ["-feature"]

  configure(scalaCompileOptions.forkOptions) {
    memoryMaximumSize = '1g'
  }
}

task zip(dependsOn: ['zipCopy', 'zipJars'])

task zipCopy(type: Copy, dependsOn: 'jar') {
  from fileTree('build/libs') {
    include "*.jar"
  }
  from configurations.runtime.files
  into 'build/zipcopy'
}

task zipCleanup(type: Delete) {
  delete 'build/zipcopy'
}

task zipJars(type: Zip) {
  archiveName "mc-endless-dispenser-${project.ext.version}.zip"
  includeEmptyDirs false
  finalizedBy 'zipCleanup'

  destinationDir file("build/distributions")

  from fileTree('build/zipcopy') {
    include "mclib*.jar"
    include "scala-library*.jar"
    include "EndlessDispenser*.jar"
    include "scala-minecraft-plugin-api*.jar"
  }

  into "/mc-endless-dispenser"
}

// See http://sethrylan.org/2013/07/02/scala-gradle-scalaconsole.html

scalaConsole.dependsOn(build)
scalaConsole.classpath += sourceSets.main.output
task console(dependsOn: "scalaConsole")

// --------------------------------------------------------------------------
// Task re-configurations
// --------------------------------------------------------------------------

jar {
  manifest {
    def manifestCP = ['../lib/mclib.jar',
                      'scala-library-plugin-2.10.0.jar',
                      'scala-plugin-api_2.10-0.3.1.jar',
                      '../craftbukkit.jar']
    attributes 'Class-Path': manifestCP.join(" ")
  }
}

// --------------------------------------------------------------------------
// Helper functions
// --------------------------------------------------------------------------

public class Util {

  public static def simpleFilename(String path) {
    path.lastIndexOf('/').with {it != -1 ? path[it+1..-1] : path}
  }

  public static def env(String var, String defaultValue) {
    def value = System.getenv()[var]
    return value ? value : defaultValue
  }
}
